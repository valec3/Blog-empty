---
import Image from 'astro/components/Image.astro';
import logoImg from '../assets/logo-v1.png';
import { navOptions } from '../constants';
---
<header class="p-4 bg-white text-primary fixed h-[88px] top-0 left-0 w-full shadow-sm z-50">
    <div class="max-w-5xl mx-auto flex justify-between items-center">
        <button id="mobile-menu-toggle" class="cursor-pointer block md:hidden z-50">
            <svg id="menu-icon" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
            </svg>
            <svg id="close-icon" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
        </button>
        <a href="#home">
            <Image src={logoImg} alt="" class="w-20 h-14 object-contain rounded-full" width="100" height="50" />
        </a>
        <nav id="mobile-menu" class="
            fixed inset-0 bg-white opacity-95 backdrop-blur-sm z-40
            transform translate-x-full transition-transform duration-300 ease-in-out
            md:static md:translate-x-0 md:flex md:justify-between md:items-center md:gap-x-8
        ">
            <div class="flex flex-col md:flex-row items-center justify-center h-full gap-y-6 md:gap-x-8 ">
                {
                    navOptions.map((option) => (
                        <a 
                            href={option.path} 
                            class="
                                border-b-2 border-transparent 
                                font-bold hover:text-primary/60 
                                text-2xl md:text-base
                                transition duration-300
                            " 
                            data-key={option.title}
                        >
                            {option.title}
                        </a>
                    ))
                }
            </div>
        </nav>
        <a
            class="border border-green-800 text-green-800 px-4 py-2 rounded-md hover:bg-green-800 hover:text-white transition duration-300 ease-in-out cursor-pointer hidden md:block"
            href="https://api.whatsapp.com/send?phone=51957012853&text=Hola%20quiero%20reservar%20una%20mesa%20en%20el%20cafe.%20Gracias"
            target="_blank"
        >
        Reservar
        </a>
    </div>
</header>

<script>
    const navLinks = document.querySelectorAll('nav a');
    const $header = document.querySelector('header');
    const currentPath = window.location.pathname;
    const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
    const mobileMenu = document.getElementById('mobile-menu');
    const menuIcon = document.getElementById('menu-icon');
    const closeIcon = document.getElementById('close-icon');

    // Active link highlighting
    navLinks.forEach(link => {
        if (link.getAttribute('href') === currentPath) {
            link.classList.add('border-b-2', 'border-primary');
        } else {
            link.classList.remove('border-b-2', 'border-primary');
        }

        // Close mobile menu when a link is clicked
        link.addEventListener('click', () => {
            mobileMenu.classList.add('translate-x-full');
            menuIcon.classList.remove('hidden');
            closeIcon.classList.add('hidden');
        });
    });

    // Mobile menu toggle
    mobileMenuToggle.addEventListener('click', () => {
        mobileMenu.classList.toggle('translate-x-full');
        menuIcon.classList.toggle('hidden');
        closeIcon.classList.toggle('hidden');

        if (mobileMenu.classList.contains('translate-x-full')) {
    // Habilita el scroll cuando el menú se cierra
            document.body.style.overflow = 'auto';
        } else {
            // Bloquea el scroll cuando el menú está abierto
            document.body.style.overflow = 'hidden';
        }


    });

    // Header link active state management
    $header.addEventListener('click', (e) => {
        if (e.target.tagName === 'A') {
            navLinks.forEach(link => {
                link.classList.remove('border-b-2', 'border-primary');
            });
            e.target.classList.add('border-b-2', 'border-primary');
        }
    });


</script>